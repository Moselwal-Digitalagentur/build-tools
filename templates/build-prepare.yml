#  Moselwal Digitalagentur Build Tools
#    Copyright (C) 2024  Moselwal Digitalagentur GmbH, Kai Ole Hartwig <support@moselwal.de>
#
#  This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

spec:
  inputs:
    stage:
      default: 'build'
      description: "The stage in the CI/CD pipeline where this job will run.  "
    rules-config:
      description: "Configuration rules that determine when the job should run."
      type: array
      default:
        - if: $CI_COMMIT_TAG
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
        - if: $CI_COMMIT_REF_NAME != 'release'
        - if: $CI_COMMIT_REF_NAME == 'release'
    image-config:
      description: "The Docker image to use for the job. This should use semantic versioning."
      default: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/bash:5-alpine3.19"
    tags-config:
      description: "Tags used to select specific runners to execute the job."
      type: array
      default:
        - docker
    additional-script-begin:
      description: "Add additional Script at the beginning of the Script."
      default: ''
    additional-script-end:
      description: "Add additional Script at the end of the Script."
      default: ''
---
build:prepare:
  stage: $[[ inputs.stage ]]
  rules: $[[ inputs.rules-config ]]
  image: $[[ inputs.image-config | expand_vars ]]
  tags: $[[ inputs.tags-config ]]
  before_script:
    - apk add --no-cache jq
  script:
    - $[[ inputs.additional-script-begin ]]
    - |
      echo "NODE_VERSION=$(cat .nvmrc)" > build.env
      echo "WEB_DIR=$(jq -r '.extra["typo3/cms"]["web-dir"]' composer.json)" >> build.env
      echo "TYPO3_VERSION=$(jq -r '.require["typo3/cms-core"]' composer.json)" >> build.env
      echo "PHP_VERSION=$(jq -r '.config.platform.php' composer.json)" >> build.env

      if [ -d "Classes" ]; then
        echo "Found PHP-Classes."
        export __HAS_PHP_CLASSES__="true"
      else
        echo "No PHP-Classes."
        export __HAS_PHP_CLASSES__="false"
      fi

      if [ -f "package.json" ] || [ -d "Build" ]; then
        echo "Found FE-Build"
        export __HAS_FRONTEND_BUILD__="true"
      else
        echo "No FE-Build"
        export __HAS_FRONTEND_BUILD__="false"
      fi
      
      # Export and reuse it in next jobs
      # Jobs needs to add this job in the needs-Section
      echo "__HAS_PHP_CLASSES__=$__HAS_PHP_CLASSES__" >> build.env
      echo "__HAS_FRONTEND_BUILD__=$__HAS_FRONTEND_BUILD__" >> build.env
    - $[[ inputs.additional-script-end ]]
  artifacts:
    reports:
      dotenv: build.env
